<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <licenses>
    <license>
      <name>&gt;GNU General Public License (GPL), Version 3.0</name>
      <url>http://www.gnu.org/copyleft/gpl.html</url>
      <distribution>repo</distribution>
      <comments>
      <![CDATA[
      gvNIX. Spring Roo based RAD tool for Conselleria d'Infraestructures
      i Transport - Generalitat Valenciana
      Copyright (C) 2010, 2011 CIT - Generalitat Valenciana

      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.

      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.

      You should have received a copy of the GNU General Public License
      along with this program. If not, see <http://www.gnu.org/licenses />.
      ]]>
      </comments>
    </license>
  </licenses>
  <parent>
    <groupId>org.gvnix</groupId>
    <artifactId>org.gvnix.osgi.roo.bundle</artifactId>
    <version>1.1.0</version>
    <relativePath>../osgi-roo-bundle</relativePath>
  </parent>
  
  <artifactId>org.gvnix.service.roo.addon</artifactId>
  <packaging>bundle</packaging>
  
  <name>gvNIX - Spring Roo - Addon - Services Management</name>
  <organization>
    <name>Conselleria d'Infraestructures i Transport - Generalitat Valenciana</name>
  </organization>
  <description>Service Layer for Spring Roo. Includes management for: Local services management, import remote services to local services and export local services via WS.</description>
  <url>http://www.gvnix.org</url>
  
  <dependencies>
    <!-- OSGi -->
    <!-- DiSiD: No OSGi dependencies, there are defined on parent pom
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>4.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <version>4.1.0</version>
    </dependency>
    -->
    
    <!-- Apache Felix -->
    <!-- DiSiD: No Felix dependency, there is defined on parent pom
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.scr.annotations</artifactId>
      <version>1.2.0</version>
    </dependency>
    -->
    
    <!-- Spring Roo modules -->
    <!-- DiSiD: No version or type; there are defined on parent pom -->
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.metadata</artifactId>
      <!--
      <version>${roo.version}</version>
      <type>bundle</type>
      -->
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.process.manager</artifactId>
      <!--
      <version>${roo.version}</version>
      <type>bundle</type>
      -->
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.project</artifactId>
      <!--
      <version>${roo.version}</version>
      <type>bundle</type>
      -->
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.support</artifactId>
      <!--
      <version>${roo.version}</version>
      <type>bundle</type>
      -->
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.shell</artifactId>
      <!--
      <version>${roo.version}</version>
      <type>bundle</type>
      -->
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.bootstrap</artifactId>
      <!--
      <version>${roo.version}</version>
      <scope>provided</scope>
      -->
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.model</artifactId>
      <!--
      <version>${roo.version}</version>
      <scope>provided</scope>
      -->
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.classpath</artifactId>
      <!--
      <version>${roo.version}</version>
      <type>bundle</type>
      -->
    </dependency>
    
    <!-- DiSiD: Additional Spring Roo modules required by this addon -->
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.addon.jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.addon.web.mvc.controller</artifactId>
    </dependency>
    
    <!-- gvNIX Roo add-ons -->
    <dependency>
      <groupId>org.gvnix</groupId>
      <artifactId>org.gvnix.dynamic.configuration.roo.addon</artifactId>
      <version>${gvnix.version}</version>
      <scope>provided</scope>
    </dependency>
    
    <!-- DiSiD: gvNIX modules required by this addon -->
    <dependency>
      <groupId>org.gvnix</groupId>
      <artifactId>org.gvnix.support</artifactId>
      <version>${gvnix.version}</version>
      <scope>provided</scope>
      <type>bundle</type>
    </dependency>
    
    <!-- DiSiD: Unit Test dependencies -->
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>    
    
    <dependency>
        <groupId>com.github.antlrjavaparser</groupId>
        <artifactId>antlr-java-parser</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.roo</groupId>
        <artifactId>org.springframework.roo.classpath.antlrjavaparser</artifactId>
    </dependency>
    
  </dependencies>

  <!-- DiSiD: Add google code distribution management -->
  <distributionManagement>
    <repository>
      <id>Google Code</id>
      <url>dav:https://${google.code.project.name}.googlecode.com/svn/repo</url>
    </repository>
  </distributionManagement>
  
  <!-- DiSiD: Add build resources filtering -->
  <build>
  
    <!-- DiSiD: Add webdav extension to google code  -->
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>1.0-beta-6</version>
      </extension>
    </extensions>
    
    <plugins>
      <!-- Copy gvNIX common support module classes to this module -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>process-classes</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.gvnix</groupId>
                  <artifactId>org.gvnix.support</artifactId>
                  <version>${gvnix.version}</version>
                  <overWrite>false</overWrite>
                  <includes>**/*.class</includes>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/roo/addon/configuration.xml</exclude>
          <exclude>**/roo/addon/ws/properties.xml</exclude>
          <exclude>**/roo/addon/ws/properties-axis.xml</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/roo/addon/configuration.xml</include>
          <include>**/roo/addon/ws/properties.xml</include>
          <include>**/roo/addon/ws/properties-axis.xml</include>
        </includes>
      </resource>
    </resources>
  </build>
  
  <!-- DiSiD: Add gvnix version from parent pom and google code project name and repo folder values -->
  <properties>
    <gvnix.version>${project.parent.version}</gvnix.version>
    <google.code.project.name>gvnix</google.code.project.name>
    <repo.folder>org/gvnix/service/roo/addon</repo.folder>
  </properties>

</project>
