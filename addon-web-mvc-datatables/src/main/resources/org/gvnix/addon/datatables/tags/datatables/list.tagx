<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:util="urn:jsptagdir:/WEB-INF/tags/jquery/util" xmlns:form="http://www.springframework.org/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:spring="http://www.springframework.org/tags" version="2.0">
  <jsp:directive.tag import="java.util.Random"/>
  <jsp:output omit-xml-declaration="yes" />

  <jsp:directive.attribute name="id" type="java.lang.String" required="true" rtexprvalue="true" description="The identifier for this tag (do not change!)" />
  <jsp:directive.attribute name="items" type="java.util.Collection" required="true" rtexprvalue="true" description="The form backing object name" />
  <jsp:directive.attribute name="label" type="java.lang.String" required="false" rtexprvalue="true" description="The label used for this object, will default to a message bundle if not supplied" />
  <jsp:directive.attribute name="labelPlural" type="java.lang.String" required="false" rtexprvalue="true" description="The label used for this object, will default to a message bundle if not supplied" />
  <jsp:directive.attribute name="render" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')" />
  <jsp:directive.attribute name="openPane" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Control if the title pane is opened or closed by default (default: true)" />
  <jsp:directive.attribute name="z" type="java.lang.String" required="false" description="Used for checking if element has been modified (to recalculate simply provide empty string value)" />

  <!-- ====================================== -->
  <!-- Extra features -->
  <!-- ====================================== -->
  
  <jsp:directive.attribute name="detail" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if detail datatables for N:M relations of this controller entity should be showed related for this datatables" />
  <jsp:directive.attribute name="detailsList" type="java.util.Collection" required="false" rtexprvalue="true" description="Detail datatables references list to show for N:M relations of this controller entity related for this datatables (List&lt;Map&lt;String, String&gt;&gt; with path and mappedBy keys)" />

  <c:if test="${empty render or render}">
    <c:if test="${empty label}">
      <spring:message code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}" var="label" htmlEscape="false" />
    </c:if>
    <c:if test="${empty labelPlural}">
      <spring:message code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}_plural" var="labelPlural" htmlEscape="false" />
    </c:if>
    <spring:message arguments="${labelPlural}" code="entity_list_all" var="title_msg" htmlEscape="false" />
    <util:panel id="${id}" title="${title_msg}" openPane="${openPane}">
        <jsp:doBody />
    </util:panel>
    
    <!-- Get datatable details list from model (set on controller) if not set directly on tag -->
    <c:if test="${not empty detailsList}">
    	<c:set value="${detailsList}" var="detailsInfo" />
    </c:if>
    
    <!-- Show detail if not manually disabled and datatables details list defined -->
    <c:if test="${(empty detail or detail) and fn:length(detailsInfo) gt 0}">
    
    	<!-- Generate identifiers with random value to avoid collisions when multiple datatables levels -->
		<jsp:scriptlet>
		jspContext.setAttribute("currentRandomInt", new Random(System.currentTimeMillis()).nextInt(99999));
		</jsp:scriptlet>
    	<c:set value="${id}_${currentRandomInt}_detail" var="mainDatatablesId" />
    	
    	<!-- Start the JQuery HTML structure to show tabs -->
    	<div id="${mainDatatablesId}"> 
	    	
	    	<!-- Tabs headers -->
	    	<!-- <ul><li><a href="#tabs-1">Tabs 1</a></li></ul> -->
	    	<ul>
		    <c:forEach items="${detailsInfo}" var="detailItem" varStatus="detailIndex">
		    	<c:set value="${mainDatatablesId}_${detailIndex.index}" var="datatablesId" />
		    	<li><a href="#${datatablesId}"><span><spring:message code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}_${detailItem.property}" htmlEscape="false" /></span></a></li>
			</c:forEach>
			</ul>
	    
	    	<!-- Tabs contents -->
	    	<!-- <div id="tabs-1"></div> -->
		    <c:forEach items="${detailsInfo}" var="detailItem" varStatus="detailIndex">
		
				<!-- Generate this detail identifie with collection index to avoid collisions when multiple datatables tabs -->
		    	<c:set value="${mainDatatablesId}_${detailIndex.index}" var="datatablesId" />
		    
			    <div id="${datatablesId}">
			    <!-- Block to include one detail -->
			    </div>
			    <script type="text/javascript">
			    
			    	function loadDetail${datatablesId} (trId) {
				    	var url = '<spring:url value="${detailItem.path}/list" javaScriptEscape="true" />?${detailItem.mappedBy}=' + trId + '&amp;datatablesMappedProperty=${detailItem.mappedBy}&amp;datatablesMappedValue=' + trId;
						$.get(url)
						.done(function(datatablesDetailContent) {
							var datatablesDetailContainer = $('#${datatablesId}');
							datatablesDetailContainer.html(datatablesDetailContent);
							$('#${mainDatatablesId}').show();
						})
						.fail(function(error) {
							if (error.status != 0) {
								alert('<spring:message code="datatables_detail_get_error" text="Error getting detail datatable from server." javaScriptEscape="true" />' +
										' (Error: ' + error.status + ', URL: ' + url + ').');
							}
							$('#${mainDatatablesId}').hide();
						});
			    	}
			    	
			    	function hideDetail${datatablesId} () {
			    		$('#${mainDatatablesId}').hide();
			    	}
					
					// para registrar un callback
					
					function callbackFunct${datatablesId} (selection, action, trId){
						var selectCount = selection.fnVisibleRowsSelecteds();
						// action puede ser 'all', 'none', 'select' o 'deselect'
						// trId es el id del registro (null para 'all' y 'none')
						if (trId){
							// obter el nodo 'tr' de la fila afectada por el cambio
							var trNode = selection.fnGetRowById(trId);
							if (trNode){
								// hacer cosas
								if (action == 'select') {
									loadDetail${datatablesId}(trId);
								} else {
									hideDetail${datatablesId}();
								}
							} else {
								// el nodo 'tr' no esta accesible (modo AJAX y registro en otra pagina)
							}
						}
					}
					
					hideDetail${datatablesId}();
					
					<c:if test="${datatablesStandardMode}">
			    		<c:set var="tableId" value="${fn:substring(id,1,-1) }"/>
						GvNIX_Selection.fnAddSelectionChangeCallback("${tableId}", callbackFunct${datatablesId});
					</c:if>
					
			    </script>
			    
			</c:forEach>
	
			<c:if test="${not datatablesStandardMode}">
			<script type="text/javascript">
				function rowCallback( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {
					<c:forEach items="${detailsInfo}" var="detailItem" varStatus="detailIndex">
			    		<c:set value="${mainDatatablesId}_${detailIndex.index}" var="datatablesId" />
			    		loadDetail${datatablesId}(nRow.id);
			    	</c:forEach>
				}
			</script>
			</c:if>
		
		<!-- End the JQuery HTML structure to show tabs -->		
		</div>
		
		<!-- Initialize the JQuery HTML structure to show tabs -->
		<script type="text/javascript">
			$(function() {
				var tabs = $( "#${mainDatatablesId}" ).tabs();
				tabs.find( ".ui-tabs-nav" ).sortable({
					axis: "x",
					stop: function() {
						tabs.tabs( "refresh" );
					}
				});
			});
		</script>
    
    </c:if>
    
  </c:if>
</jsp:root>