<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" xmlns:table="urn:jsptagdir:/WEB-INF/tags/datatables" xmlns:spring="http://www.springframework.org/tags" xmlns:form="http://www.springframework.org/tags/form" xmlns:fmt="http://java.sun.com/jsp/jstl/fmt" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:gvnixddt="http://www.gvnix.org/gvnix-datatables" xmlns:datatables="http://github.com/dandelion/datatables" version="2.0">
  <jsp:directive.tag import="java.util.Random"/>
  <jsp:directive.tag import="org.springframework.web.servlet.support.RequestContext"/>
  <jsp:directive.tag import="org.springframework.web.servlet.tags.RequestContextAwareTag"/>
  <jsp:directive.tag import="java.util.ArrayList" />
  <jsp:output omit-xml-declaration="yes" />

  <!-- ====================================== -->
  <!-- ====================================== -->
  <!-- Roo parameters -->
  <!-- ====================================== -->
  <!-- ====================================== -->

  <jsp:directive.attribute name="id" type="java.lang.String" required="true" rtexprvalue="true" description="The identifier for this tag (do not change!)" />
  <jsp:directive.attribute name="data" type="java.util.Collection" required="true" rtexprvalue="true" description="The collection to be displayed in the table" />
  <jsp:directive.attribute name="path" type="java.lang.String" required="true" rtexprvalue="true" description="Specify the URL path" />
  <jsp:directive.attribute name="typeIdFieldName" type="java.lang.String" required="false" rtexprvalue="true" description="The identifier field name for the type (defaults to 'id')" />
  <jsp:directive.attribute name="create" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'create' link into table (default true)" />
  <jsp:directive.attribute name="update" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'update' link into table (default true)" />
  <jsp:directive.attribute name="delete" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'delete' link into table (default true)" />
  <jsp:directive.attribute name="render" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')" />
  <jsp:directive.attribute name="z" type="java.lang.String" required="false" description="Used for checking if element has been modified (to recalculate simply provide empty string value)" />
  <jsp:directive.attribute name="actionHeaderCssStyle" type="java.lang.String" required="false" description="Custom css-style for action columns header" />
  
  <!-- selection -->
  <jsp:directive.attribute name="selection" type="java.lang.Boolean" required="false" description="Enable selection (default: true)" />
  <jsp:directive.attribute name="selectionMultiRow" type="java.lang.Boolean" required="false" description="Enable selection on multiple rows" />
  <jsp:directive.attribute name="selectionByCheck" type="java.lang.Boolean" required="false" description="Use checkbox to select" />
  <jsp:directive.attribute name="selectionCheckCssClass" type="java.lang.String" required="false" description="Css class for selection checkbox" />
  <jsp:directive.attribute name="selectionSelectedCssClass" type="java.lang.String" required="false" description="Css class for selected rows [default: 'row_selected']" />
  <jsp:directive.attribute name="selectionNotSelectedCssClass" type="java.lang.String" required="false" description="Css class for not-selected rows" />
  <jsp:directive.attribute name="selectionInfoLabel" type="java.lang.String" required="false" description="Label to use for selection information (default 'datatables_selection_info')" />


  <!-- ====================================== -->
  <!-- ====================================== -->
  <!-- Datatables parameters -->
  <!-- ====================================== -->
  <!-- ====================================== -->


  <jsp:directive.attribute name="url" type="java.lang.String" rtexprvalue="true"  required="false" description="Web service URL used to populate the table.  (Either data or url attribute is required)" />
  <jsp:directive.attribute name="appear" type="java.lang.String" rtexprvalue="true" required="false" description="(block|fadein[,duration]) Display mode used when the table has finished loading and must appear in the page.  A duration can be set (in milliseconds) if the display mode is set to 'fadein'. (Default : 'block')" />
  <jsp:directive.attribute name="cdn" type="java.lang.String" rtexprvalue="true" required="false" description="(true|false) Enable the DataTables source files to be loaded from the Microsoft CDN (Content Delivery Framework) preventing you from hosting the files yourself. (Default : false)" />
  <jsp:directive.attribute name="cssStyle" type="java.lang.String" rtexprvalue="true" required="false" description="CSS style applied on the HTML table. (HTML style attribute)" />
  <jsp:directive.attribute name="cssClass" type="java.lang.String" rtexprvalue="true" required="false" description="CSS class(es) applied on the HTML table. (HTML class attribute)" />
  <jsp:directive.attribute name="rowIdBase" type="java.lang.String" rtexprvalue="true" required="false" description="Useful if you want each row has a DOM id. This attribute is evaluated as a property of the current iterated bean. (Only if DOM datasource)" />
  <jsp:directive.attribute name="rowIdPrefix" type="java.lang.String" rtexprvalue="true" required="false" description="String which is prepended to the rowIdBase attribute, in order to build row id. (HTML id attribute)" />
  <jsp:directive.attribute name="rowIdSufix" type="java.lang.String" rtexprvalue="true" required="false" description="String which is appended to the rowIdBase attribute, in order to build row id. (HTML id attribute)" />
  <jsp:directive.attribute name="deferRender" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Defer the creation of the table elements for each row until they are needed for a draw.  (Default : false, see http://datatables.net/ref#bDeferRender)" />
  <jsp:directive.attribute name="dom" type="java.lang.String" rtexprvalue="true" required="false" description="Allows you to specify exactly where in the DOM you want DataTables to inject the various controls it adds to the page (for example you might want the pagination controls at the top of the table). DIV elements (with or without a custom class) can also be added to aid styling." />

  <!-- ====================================== -->
  <!-- Basic features -->
  <!-- ====================================== -->
  <jsp:directive.attribute name="info" type="java.lang.String" rtexprvalue="true" required="false" description="(true|false) Enable or disable the table information display. This shows information about the data that is currently visible on the page, including information about filtered data if that action is being performed.  (Default : true, see http://datatables.net/ref#bInfo)" />
  <jsp:directive.attribute name="paginate" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Enable or disable pagination.  (Default : true, see http://datatables.net/ref#bPaginate)" />
  <jsp:directive.attribute name="lengthChange" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) If paginate is enabled, allows the end user to select the size of a formatted page from a select menu (sizes are 10, 25, 50 and 100). (Default : true, see http://datatables.net/ref#bLengthChange)" />
  <jsp:directive.attribute name="paginationType" type="java.lang.String" rtexprvalue="true" required="false" description="(two_button|full_numbers) Choice between the two different built-in pagination interaction methods ('two_button' or 'full_numbers') which present different page controls to the end user. Default: full_numbers (More info: http://datatables.net/ref#sPaginationType)" />
  <jsp:directive.attribute name="filter" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Enable or disable filtering of data.  (Default : true, see http://datatables.net/ref#bFilter)" />
  <jsp:directive.attribute name="sort" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Enable or disable sorting of all columns.  Sorting of individual columns can be disabled by the 'sortable' attribute of column tag. (Default : true, see http://datatables.net/ref#bSort)" />
  <jsp:directive.attribute name="autoWidth" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Enable or disable automatic column width calculation. (Default : true, see http://datatables.net/ref#bAutoWidth)" />

  <jsp:directive.attribute name="processing" type="java.lang.String" rtexprvalue="true" required="false" description="(true|false) Enable or disable the display of a 'processing' indicator when the table is being processed (e.g. a sort). This is particularly useful for tables with large amounts of data where it can take a noticeable amount of time to sort the entries. (Default : false, see http://datatables.net/ref#bProcessing)" />
  <jsp:directive.attribute name="serverData" type="java.lang.String" rtexprvalue="true" required="false" description="Allows you to override the default function which obtains the data from the server ($.getJSON) so something more suitable for your application" />
  <jsp:directive.attribute name="serverParams" type="java.lang.String" rtexprvalue="true" required="false" description="Allows you to send extra information to the server when using AJAX source" />
  <jsp:directive.attribute name="pipelining" type="java.lang.Boolean" rtexprvalue="true" required="false" description="Enable pipelining data for paging when server-side processing is enabled" />
  <jsp:directive.attribute name="pipeSize" type="java.lang.Integer" rtexprvalue="true" required="false" description="Pipe size used when pipelining is enabled, ie times that the user can page before a request must be made of the server. (Default : 5)" />
  <jsp:directive.attribute name="stateSave" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Enable or disable state saving.  When enabled a cookie will be used to save table display information such as pagination information, display length, filtering and sorting. As such when the end user reloads the page the display display will match what thy had previously set up. (Default : false, see http://datatables.net/ref#bStateSave)" />
  <jsp:directive.attribute name="export" type="java.lang.String" rtexprvalue="true" required="false" description="Enable the export functionality" />
  <jsp:directive.attribute name="exportLinks" type="java.lang.String" rtexprvalue="true" required="false" description="(TOP_LEFT|TOP_MIDDLE|TOP_RIGHT|BOTTOM_LEFT|BOTTOM_MIDDLE|BOTTOM_RIGHT) Comma-separated list of positions where the export links will be generated (Default : TOP_RIGHT)" />
  <jsp:directive.attribute name="jqueryUI" type="java.lang.String" rtexprvalue="true" required="false" description="(true|false) Enable jQuery UI ThemeRoller support (Default : false, see http://datatables.net/ref#bJQueryUI)" />
  <jsp:directive.attribute name="footer" type="java.lang.String" rtexprvalue="true" required="false" description="(header) Choose if you want to have the footer appear.  (Default : none)" />
  <jsp:directive.attribute name="theme" type="java.lang.String" rtexprvalue="true" required="false" description="Name of a theme to activate for the current table.  (Default : none)" />
  <jsp:directive.attribute name="themeOption" type="java.lang.String" rtexprvalue="true" required="false" description="Name of an option to activate in relation to the current activated theme." />
  <jsp:directive.attribute name="lengthMenu" type="java.lang.String" rtexprvalue="true" required="false" description="Specify the entries in the length drop down menu that DataTables show when pagination is enabled." />
  <jsp:directive.attribute name="cssStripes" type="java.lang.String" rtexprvalue="true" required="false" description="Comma-separated list of CSS classes that should be applied to displayed rows. This array may be of any length, and DataTables will apply each class sequentially, looping when required." />
  <jsp:directive.attribute name="displayLength" type="java.lang.Integer" rtexprvalue="true" required="false" description="Number of rows to display on a single page when using pagination." />
  <jsp:directive.attribute name="ext" type="java.lang.String" rtexprvalue="true" required="false" description="Comma-separated names of custom extensions to register in the current table." />
  <jsp:directive.attribute name="confGroup" type="java.lang.String" rtexprvalue="true" required="false" description="Name of the configuration group to activate for the current table." />
  <jsp:directive.attribute name="filterPlaceholder" type="java.lang.String" rtexprvalue="true" required="false" description="Placeholder used to hold the individual column filtering elements." />
  
  

  <!-- ====================================== -->
  <!-- Extra features -->
  <!-- ====================================== -->

  <!-- FixedHeader -->
  <jsp:directive.attribute name="fixedHeader" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Enable or disable the DataTables FixedHeader plugin. (Default : false) (See : http://datatables.net/extras/fixedheader/)" />
  <jsp:directive.attribute name="fixedPosition" type="java.lang.String" rtexprvalue="true" required="false" description="(top|bottom|left|right) Respectively fix the header, footer, left column, right column. (Default : top)" />
  <jsp:directive.attribute name="offsetTop" type="java.lang.Integer" rtexprvalue="true" required="false" description="Offset applied on the top." />

  <!-- Scroller -->
  <jsp:directive.attribute name="scroller" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Enable or disable the DataTables Scroller plugin. (Default : false) (See : http://datatables.net/extras/scroller/)" />
  <jsp:directive.attribute name="scrollY" type="java.lang.String" rtexprvalue="true" required="false" description="Table's height to display in scrolling mode.  (default : 300px)" />
  <jsp:directive.attribute name="scrollCollapse" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) When vertical (y) scrolling is enabled, DataTables will force the height of the table's viewport to the given height at all times (useful for layout). However, this can look odd when filtering data down to a small data set, and the footer is left 'floating' further down. This parameter (when enabled) will cause DataTables to collapse the table's viewport down when the result set will fit within the given Y height. (default : false)" />
  <jsp:directive.attribute name="scrollX" type="java.lang.String" rtexprvalue="true" required="false" description="Table's width to display in scrolling mode. (default : '')" />
  <jsp:directive.attribute name="scrollXInner" type="java.lang.String" rtexprvalue="true" required="false" description="se more width than it might otherwise do when x-scrolling is enabled. (default : '')"/>

  <!-- ColReorder -->
  <jsp:directive.attribute name="colReorder" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Enable or disable the DataTables ColReorder plugin. (Default : false) (See : http://datatables.net/extras/colreorder/)" />
  
  <!-- Filtering options -->
  <jsp:directive.attribute name="filterOnReturn" type="java.lang.Boolean" rtexprvalue="true" required="false" description="(true|false) Wait until Intro key is pressed to perform a search or filtering. (Default : false)" />
  <jsp:directive.attribute name="filteringDelay" type="java.lang.Integer" rtexprvalue="true" required="false" description="Milisecons to wait from last key-press event to perform a search or filtering. (Default: 500)" />


  <!-- ====================== -->
  <!-- Prepare default values -->
  <!-- ====================== -->
  
  <jsp:useBean id="datatables_javaScript_elements_before" class="java.util.HashMap" scope="request"/>
  <jsp:useBean id="datatables_javaScript_elements_after" class="java.util.HashMap" scope="request"/>
  <jsp:useBean id="datatables_javaScript_elements_init" class="java.util.HashMap" scope="request"/>
    
  <!-- typeIdFieldName -->
  <c:if test="${empty typeIdFieldName}">
      <c:set var="typeIdFieldName" value="id" />
  </c:if>
  
  <!-- actionHeaderCssStyle -->
  <c:if test="${empty actionHeaderCssStyle}">
      <c:set var="actionHeaderCssStyle" value="color: #ffffff;background: #ffffff;padding: 2px; width : 0px" />
  </c:if>
    
  <!-- Type Name -->  
  <spring:message var="typeName" code="menu_item_${fn:toLowerCase(fn:split(id,'_')[fn:length(fn:split(id,'_')) - 1])}_new_label" htmlEscape="false" />

  <!-- Add random value to datatables identifier to avoid collisions when multiple datatables details -->
  <jsp:scriptlet>
  jspContext.setAttribute("currentRandomInt", new Random(System.currentTimeMillis()).nextInt(99999));
  </jsp:scriptlet>
  <c:set value="${id}_${currentRandomInt}" var="id" />
  <!-- This datatables identifier is required by list.tagx when show datatables details -->
  <c:set value="${id}" var="parentId" scope="request" />
  
  <c:if test="${empty appear}">
  	<c:set var="appear" value="block"/>
  </c:if>
  <c:if test="${empty deferRender}">
  	<c:set var="deferRender" value="false"/>
  </c:if>
  
  <!-- displayLength -->
  <c:if test="${empty displayLength }">
  	<c:set var="displayLength" value="10"/>
  </c:if>
  
  <!-- Require 'datatablesUseAjax' defined in context -->
  <c:set var="serverSide" value="${datatablesUseAjax}"/>
  <jsp:scriptlet>
    if (jspContext.getAttribute("serverSide") == null){
        throw new IllegalArgumentException("Missing context value for 'datatablesUseAjax'");
    }
  </jsp:scriptlet>
  
  <c:if test="${serverSide and empty serverData }">
    <c:set var="serverData" value="doAjaxRequestByPost"/>
  </c:if>

  <!-- Ignore baseFilter if serverParams is set -->
  <c:if test="${serverSide and empty serverParams}">

    <!-- Create JS function to include base filters as datatable extra params -->
    <c:if test="${not empty baseFilter}">
		<c:set target="${datatables_javaScript_elements_before}" property="getExtraParams">
			function getExtraParams( aoData ) {
			    <c:forEach items="${baseFilter}" var="entry"> 
			    aoData.push( {"name": "${entry.key}", "value" : "${entry.value}"});
			    </c:forEach> 
			}
		</c:set>
		<c:set var="serverParams" value="getExtraParams"/>
    </c:if> 
  </c:if>

  <!-- If data has values Datatables doesn't request server side values, so
       if serverSide is set remove data var to let datatables to call server -->
  <c:if test="${serverSide}">
	<c:remove var="data"/>
  </c:if>
  <c:if test="${empty paginationType}">
  	<c:set var="paginationType" value="full_numbers"/>
  </c:if>
  <c:if test="${empty pipeSize}">
  	<c:set var="pipeSize" value="5"/>
  </c:if>

  <!-- Export buttons are rendered in DOM mode only -->
  <c:choose>
	  <c:when test="${serverSide}"> 
	  	<c:set var="export" value=""/>
	  </c:when>
	  <c:otherwise> 
		  <c:if test="${empty export}">
		  	<c:set var="export" value="csv,xls,pdf"/>
		  </c:if>
	  </c:otherwise>
  </c:choose>
  
  <!-- set row id based on entity id attribute -->
  <c:if test="${(not serverSide) and (empty rowIdBase)}">
  	<c:set var="rowIdBase" value="${typeIdFieldName}"/>
  </c:if>
  <c:if test="${empty exportLinks}">
  	<c:set var="exportLinks" value="top_right"/>
  </c:if>
  <c:if test="${empty fixedPosition}">
  	<c:set var="fixedPosition" value="top"/>
  </c:if>
  
  <c:if test="${empty offsetTop}">
  	<c:set var="offsetTop" value="5"/>
  </c:if>
  <c:if test="${empty scrollY}">
  	<c:set var="scrollY" value="300px"/>
  </c:if>
  
  <spring:url value="${path}" var="urlPath" />
  
  <spring:url value="" var="urlParams">
    <spring:param name="form"/>
    <c:forEach var="paramAux" items="${param}" >
      <spring:param name="${paramAux.key}" value="${paramAux.value}" />
    </c:forEach>
  </spring:url>
  
  <script type="text/javascript">
    var datatablesRedirect = 'datatablesRedirect=' + encodeURIComponent(document.URL);
  </script>

  <c:choose>
    <c:when test="${not datatablesStandardMode}">
     <!-- 
     ******* Register views configuration ******
     -->

    <c:set var="columnId" value="${id}"/>
    <!-- Change the Id value to avoid problem of restore a configuration from
    cookies which can override this options (per ex. displayLenght) -->
    <c:set var="id" value="${id}__RegisterView"/>
    
    
  	<c:set var="displayLength" value="1"/>
  	<c:set var="paginate" value="true"/>
  	<c:set var="paginationType" value="full_numbers"/>
  	<c:set var="lengthChange" value="false"/>
  	<c:set var="filter" value="false"/>
  	<c:set var="export" value=""/>
  	<c:set var="cssClass" value="registerTable"/>
  	<c:set var="pipelining" value="false"/>
	<jsp:scriptlet>
	if (!((Boolean)jspContext.getAttribute("serverSide")).booleanValue()){
		throw new IllegalArgumentException("DOM mode unsupported for Register view mode");
	}
	</jsp:scriptlet>

    <c:set target="${datatables_javaScript_elements_before}" property="evalScripts">
        /*
         * Evaluate Javascript inside TDs.
         * By calling jQuery wrap all script elements in the TD contents 
         * will automatically be evaluated.
         */
        function evalScripts( oSettings ) { 
          if ( typeof oTable_${id} != 'undefined' ) {
              oTable_${id}.$('td').each(function(i) {
                  $(this).wrapInner($('<div></div>'));
              });
          }
        }
    </c:set>
   </c:when>

  <c:otherwise>
  <!-- 
  *******	Tabular views configuration ******
   -->
  <!-- selection -->
  <c:choose>
    <c:when test="${empty selection or selection}">
      <c:set var="selection" value="true"/>
      <c:if test="${empty selectionSelectedCssClass}">
      	<c:set var="selectionSelectedCssClass" value="row_selected"/>
      </c:if>
      <c:if test="${empty selectionMultiRow}">
      	<c:set var="selectionMultiRow" value="false"/>
      </c:if>

                <!-- Show select all button -->
      <c:if test="${selectionMultiRow}">
       <c:set var="selection_all_link" value="true"/>
       <spring:message var="selection_all_msg" code="selection_all" htmlEscape="false" javaScriptEscape="true"/>
      </c:if>

                <!-- Show select none button -->
                <spring:message var="selection_none_msg" code="selection_none" htmlEscape="false" javaScriptEscape="true"/>

      <c:if test="${empty selectionInfoLabel}">
      	<c:set var="selectionInfoLabel" value="datatables_selection_info"/>
      </c:if>
      <spring:message code="${selectionInfoLabel}" htmlEscape="false" var="selection_info_msg"/>
      <c:if test="${selectionByCheck}">
        <form id="${selectionCheckColumnId}_form" name="${selectionCheckColumnId}_form">
        </form>
        <c:if test="${empty selectionCheckCssClass}">
      		<c:set var="selectionCheckCssClass" value="check_select_row"/>
      	</c:if>
    	<c:set var="selectionCheckColumnId" value="${id}_select_col"/>
    	<c:if test="${serverSide}">

                        <!-- Add selection functions to the script element before Datatables element -->
    		<c:set target="${datatables_javaScript_elements_before}" property="${selectionCheckColumnId}">
	        function ${selectionCheckColumnId}(data, type, full) {
                            var result = '<input type="checkbox" class="${selectionCheckCssClass}" form="${selectionCheckColumnId}_form"/>';
                return result;
		    }
	     	</c:set>
    	</c:if>
 	  </c:if>
	  <c:set target="${datatables_javaScript_elements_after}" property="selection_tools">
        /** selection support functions **/
		function ${id}_selectNone(){
			$('#${id}').dataTable().fnSelection().fnSelectNone();
		};
		var ${id}_selectionTools_str = '<div class="gvnix_datatables_selection_box" style="float:left;margin-left:10px;">';
		${id}_selectionTools_str += '<a href="javascript:${id}_selectNone();" class="icon selection_none">${selection_none_msg}</a>';
		<c:if test="${selection_all_link}">
		function ${id}_selectAll(){
			$('#${id}').dataTable().fnSelection().fnSelectAll();
		};
		${id}_selectionTools_str += '<a href="javascript:${id}_selectAll();" class="icon selection_all">${selection_all_msg}</a>';
		</c:if>
		${id}_selectionTools_str += '</div>'
      </c:set>
      <c:set target="${datatables_javaScript_elements_init}" property="selection_tools">
        $('#${id}_filter').before(${id}_selectionTools_str);
      </c:set>
    </c:when>
    <c:otherwise>
    	<!-- if no selection no selection by check -->
    	<c:set var="selectionByCheck" value="false"/>
    </c:otherwise>
  </c:choose>
  
  
  <!-- show -->
  <c:set var="showColumnId" value="${id}_show_col"/>
  <c:if test="${serverSide}">
      <!-- function to render cell -->
      <c:set var="show_label">
	      <spring:escapeBody javaScriptEscape="true">
	         <spring:message arguments="${typeName}" code="entity_show" />
	      </spring:escapeBody>
      </c:set>
      <spring:url value="/resources/images/show.png" var="show_image_url" />
      <c:set target="${datatables_javaScript_elements_before}" property="${showColumnId}">
	    function ${showColumnId}(data, type, full) {
		    var result =  
	           '<a href="${urlPath}/'+full.${typeIdFieldName} + '?' + datatablesRedirect + '" alt="${show_label}" title="${show_label}">'
	           + '  <img alt="${show_label}" class="image" src="${show_image_url}" title="${show_label}" />'
	           + '</a>';
	           
	        return result;
		}	
	  </c:set>
        </c:if><!-- /serverSide -->
  
  <!-- create -->
  <c:if test="${empty create}">
    <c:set var="create" value="true"/>
  </c:if>
  <c:if test="${create}">
    <c:set var="createButtonCallbackId" value="${id}_create_btn_callbk"/>
    <!-- function to render cell -->
    <c:set var="create_label">
	  <spring:escapeBody javaScriptEscape="true">  	  
    	<spring:message arguments="${typeName}" code="entity_create"/>
      </spring:escapeBody>
    </c:set>
    <spring:url value="/resources/images/add.png" var="create_image_url" />
	<c:set target="${datatables_javaScript_elements_before}" property="${createButtonCallbackId}">
        function ${createButtonCallbackId}() {
           var result =
               '<div class="gvnix_dataTables_createItem" style="float:left;margin-left:10px;">'
               +'<a href="${urlPath}${urlParams}&amp;' + datatablesRedirect + '" alt="${create_label}" title="${create_label}">'
               + '  <img alt="${create_label}" class="image" src="${create_image_url}" title="${create_label}" />'
               + '</a>'
               + '</div>';
           $('#${id}_filter').before(result);
	    }
    </c:set>
    <c:set target="${datatables_javaScript_elements_init}" property="${createButtonCallbackId}">
    ${createButtonCallbackId}();
    </c:set>
  </c:if>

  <!-- update -->  
  <c:if test="${empty update}">
  	<c:set var="update" value="true"/>  	
  </c:if>
  
  <c:if test="${update}">
  	<c:set var="updateColumnId" value="${id}_update_col"/>
  	  <c:if test="${serverSide}">
        <!-- function to render cell -->
        <c:set var="update_label">
	      <spring:escapeBody javaScriptEscape="true">  	  
            <spring:message arguments="${typeName}" code="entity_update"/>
          </spring:escapeBody>
        </c:set>
        <spring:url value="/resources/images/update.png" var="update_image_url" />
	    <c:set target="${datatables_javaScript_elements_before}" property="${updateColumnId}">
	        function ${updateColumnId}(data, type, full) {
	        	var result =
	              '<a href="${urlPath}/'+full.${typeIdFieldName}+'${urlParams}'+'&amp;' + datatablesRedirect + '" alt="${update_label}" title="${update_label}">'
	               + '  <img alt="${update_label}" class="image" src="${update_image_url}" title="${update_label}" />'
	               + '</a>';
	            return result;
		    }
	    </c:set>
      </c:if>  	
  </c:if>
  
  <!-- delete -->  
  <c:if test="${empty delete}">
  	<c:set var="delete" value="true"/>  	
  </c:if>
  
  <c:if test="${delete}">
  	<c:set var="removeColumnId" value="${id}_remove_col"/>
  	<c:if test="${serverSide or selectionMultiRow}">
  	    <c:set var="delete_label">
	      <spring:escapeBody javaScriptEscape="true">  	  
            <spring:message arguments="${typeName}" code="entity_delete"/>
          </spring:escapeBody>
        </c:set>
        <c:set var="delete_confirm_msg">
          <spring:escapeBody javaScriptEscape="true">
             <spring:message code="entity_delete_confirm" />
          </spring:escapeBody>
        </c:set>
        <spring:url value="/resources/images/delete.png" var="delete_image_url" />
        <c:choose>
        <c:when test="${selectionMultiRow and datatablesHasBatchSupport}">
	        <c:set var="delete_multirow_confirm_msg">
	          <spring:escapeBody javaScriptEscape="true" htmlEscape="false">
	             <spring:message code="entity_delete_multirow_confirm" />
	          </spring:escapeBody>
	        </c:set>
	        <c:set var="delete_ok_msg">
	          <spring:escapeBody javaScriptEscape="true">
	             <spring:message code="entity_deleted" />
	          </spring:escapeBody>
	        </c:set>
	        <c:set var="delete_none_msg">
	          <spring:escapeBody javaScriptEscape="true">
	             <spring:message code="entity_deleted_none" />
	          </spring:escapeBody>
	        </c:set>
	        <c:set var="delete_error_msg">
	          <spring:escapeBody javaScriptEscape="true">
	             <spring:message code="entity_deleted_error" />
	          </spring:escapeBody>
	        </c:set>
        	<!-- function for link -->
		    <c:set target="${datatables_javaScript_elements_before}" property="${removeColumnId}">
		    
		        var ${removeColumnId}_delete_error = "${delete_error_msg}";
		        var ${removeColumnId}_deleted = "${delete_ok_msg}";
		        var ${removeColumnId}_deleted_none = "${delete_none_msg}";
		        var ${removeColumnId}_multiconfirmation = "${delete_multirow_confirm_msg}";
		        var ${removeColumnId}_confirmation = "${delete_confirm_msg}";
  
                      /* ... */
		        function ${removeColumnId}() {
		        	var $table = $('#${id}').dataTable(); 
  
                          // Get the table GvNIX_Selection object
		        	var $selection = $table.fnSelection();
		        	var selCount = $selection.fnSelectionCount();
		        	if ( selCount > 1) {
			        	if (!confirm(${removeColumnId}_multiconfirmation + ' ' + selCount)){
			        		return;
			        	}
		        	} else if (selCount == 1){
			        	if (!confirm(${removeColumnId}_confirmation)){
			        		return;
			        	}
		        	} else {
		        		alert("Select records to remove");
		        		return;
		        	} 
		        	var selectionInfo = $selection.fnGetSelectionInfo();
		        	var deleteParams = {
					    <c:if test="${not empty baseFilter}">
					    <c:forEach items="${baseFilter}" var="entry"> 
					    '${entry.key}' : '${entry.value}',
					    </c:forEach> 
					    </c:if>		        		
		        		'all' : selectionInfo.all,
		        		'deleteIn': selectionInfo.idListSelected,
		        		'idList' : selectionInfo.idList
		        	};
		        	$.post(
					  '${urlPath}/delete',
					  deleteParams,
					  function (data) {
		        			log('delete OK: ' + data);
					  		var count = parseInt(data);
					  		if (count > 0){
			        			alert(${removeColumnId}_deleted + ' ' + data);
		        			} else {
			        			alert(${removeColumnId}_deleted_none);
		        			}
		        			<c:choose>
		        			<c:when test="${serverSide}">
		        			$table.fnDraw();
		        			</c:when>
		        			<c:otherwise>
	        				// TODO optimize it (remove lines instead reload page)
	        				location.reload();
	        				</c:otherwise>
	        				</c:choose>
	        				$selection.fnSelectNone();
		        		}
					  ).fail( function (data) {
		        			log('delete ERROR: ' + data.status + ' ' + data.statusText + '-' + data.responseText);
		        			if (!data || !data.responseText) {
		        				alert(${removeColumnId}_delete_error);
		        			} else if (typeof data.responseText) {
		        			    try {
		        			    	var responseObj = jQuery.parseJSON(data.responseText);
		        					alert(${removeColumnId}_delete_error + ': ' + (responseObj.localizedMessage ? responseObj.localizedMessage : responseObj.message));
		        				} catch (e) {
		        					alert(${removeColumnId}_delete_error + ': ' + data.responseText);
		        				}
		        			}
		        		});
		        }
		    	function ${removeColumnId}_div() {
           			var result =
               			'<div class="gvnix_dataTables_deleteItem" style="float:left;margin-left:10px;">'
               			+'<a id="${removeColumnId}" href="#" alt="${delete_label}" title="${delete_label}">'
               			+ '  <img alt="${delete_label}" class="image" src="${delete_image_url}" title="${delete_label}" />'
               			+ '</a>'
               			+ '</div>';
           			$('#${id}_filter').before(result);
           			$('#${removeColumnId}').on('click', ${removeColumnId});
	    		}
		     </c:set>
		     <c:set target="${datatables_javaScript_elements_init}" property="${removeColumnId}">
		     	${removeColumnId}_div();
		     </c:set>
		     
        </c:when>
        <c:otherwise>
	        <!-- function to render cell -->
		    <c:set target="${datatables_javaScript_elements_before}" property="${removeColumnId}">
		        var ${removeColumnId}_confirmation = "${delete_confirm_msg}";
		        function ${removeColumnId}(data, type, full) {
		        	var result =
		                '<form action="${urlPath}/'+full.${typeIdFieldName}+'?' + datatablesRedirect + '" method="post">'
		                + '  <input type="hidden" value="DELETE" name="_method"/>'
		                + '  <input alt="${delete_label}" class="image" src="${delete_image_url}" title="${delete_label}" type="image" value="${delete_label}" onclick="return confirm(${removeColumnId}_confirmation);" />'
		                + '</form>';
		                
	                return result;
			    }
		     </c:set>
	     </c:otherwise>
	     </c:choose>
     </c:if>
  </c:if>
  
  
  <!-- 
  *******	End Tabular view configuration **********
   -->
  </c:otherwise>
  </c:choose>
  
    <!-- Custom datatables API functions -->
    <c:set var="initCustomFunctionsCallbackId" value="${id}_init_custom_callbk"/>
  
  <div id="${id}_gvnix_datatables">
  <c:if test="${not empty datatables_javaScript_elements_before}">
  <script type="text/javascript">
		<c:forEach var="entry" items="${datatables_javaScript_elements_before}">
		${entry.value}
		</c:forEach>
  </script>
  </c:if>

    <!-- Dandelion-Datatables -->
    <gvnixddt:table
		id="${id}"
		data="${data}"
		path="${urlPath}"
		typeIdFieldName="${typeIdFieldName}"
		create="${create}"
		update="${update}"
		delete="${delete}"
		render="${empty render or render}"
		z="${z}"
				
      url="${url}"
      row="item"
      appear="${appear}"
      cdn="${cdn}"
      cssStyle="${cssStyle}"
      cssClass="${cssClass}"
      rowIdBase="${rowIdBase}"
      rowIdPrefix="${rowIdPrefix}"
      rowIdSufix="${rowIdSufix}"
      deferRender="${deferRender}"
      dom="${dom}"

      info="${empty info or info}"
      paginate="${empty paginate or paginate}"
      lengthChange="${empty lengthChange or lengthChange}"
      paginationType="${paginationType}"
      filter="${empty filter or filter}"
      sort="${empty sort or sort}"
      autoWidth="${autoWidth}"

      processing="${empty processing or processing}"
      serverSide="${serverSide}"
      serverData="${serverData}"
      serverParams="${serverParams}"
      pipelining="${pipelining}"
      pipeSize="${pipeSize}"
      stateSave="${empty stateSave or stateSave}"
      export="${export}"
      exportLinks="${exportLinks}"
      jqueryUI="${jqueryUI}"
      footer="${footer}"
      theme="${theme}"
      themeOption="${themeOption}"
      lengthMenu="${lengthMenu}"
      cssStripes="${cssStripes}"
      displayLength="${displayLength}"
        ext="${ext}"
        confGroup="${confGroup}"
        filterPlaceholder="${filterPlaceholder}"

      fixedHeader="${fixedHeader}"
      fixedPosition="${fixedPosition}"
      offsetTop="${offsetTop}"

      scroller="${scroller}"
      scrollY="${scrollY}"
      scrollCollapse="${scrollCollapse}"
        scrollX="${scrollX}"
        scrollXInner="${scrollXInner}"

      colReorder="${colReorder}"
    >
    	<c:choose>

            <!-- On register view mode add a datatables column only, checkbox, 
                 row update button, etc aren't needed -->
    	<c:when test="${not datatablesStandardMode}">
    		<!-- Cell to replace by data -->
			<gvnixddt:column id="${columnId}" searchable="false" property="${rowIdBase}"
				filterable="false" sortable="false"></gvnixddt:column>

           <!--  callback to initialize custom api functions -->
           <datatables:callback type="draw" function="evalScripts" />

           <!-- TODO Include it only in show mode -->
           <datatables:callback type="row" function="rowCallback" />
            </c:when>

            <!-- On table view mode, setup columns for action buttons -->
            <c:otherwise>

                <!-- If rows are selected using checkboxes, add action column with
                     the checkbox -->
    	<c:if test="${selectionByCheck}">
    	  <c:choose>
            <c:when test="${serverSide}">
		      <table:action-column id="${selectionCheckColumnId}" cssClass="utilbox" cssCellClass="utilbox" renderFunction="${selectionCheckColumnId}" cssStyle="${actionHeaderCssStyle}"/>
            </c:when>

                        <!-- DOM cell render -->
		    <c:otherwise>
			  <table:action-column id="${selectionCheckColumnId}" cssCellClass="utilbox" cssStyle="${actionHeaderCssStyle}" >
			  	<c:if test="${not empty item }">
			  	<input type="checkbox" class="${selectionCheckCssClass}" form="${selectionCheckColumnId}_form"/>
			  	</c:if>
			  </table:action-column>
		    </c:otherwise>
		  </c:choose>
		</c:if>
		
		<!-- data columns will be inserted here -->  
        <jsp:doBody />
        
                <!-- Add action column with show row details button --> 
        <c:choose>

                    <!-- AJAX cell render -->
          <c:when test="${serverSide}">
			<table:action-column id="${showColumnId}" cssClass="utilbox" cssCellClass="utilbox" renderFunction="${showColumnId}" cssStyle="${actionHeaderCssStyle}"/>
          </c:when>

                    <!-- DOM cell render -->
		  <c:otherwise>
			  <table:action-column id="${showColumnId}" cssCellClass="utilbox" cssStyle="${actionHeaderCssStyle}" >
			  <c:if test="${not empty item }">
	            <c:set var="itemId"><spring:eval expression="item[typeIdFieldName]"/></c:set>
                  <spring:url value="${path}/${itemId}" var="show_form_url" />
                  <spring:url value="/resources/images/show.png" var="show_image_url" />
                  <spring:message arguments="${typeName}" code="entity_show" var="show_label" htmlEscape="false" />
                  <a href="#" onclick="javascript: window.location = '${show_form_url}?' + datatablesRedirect" alt="${fn:escapeXml(show_label)}" title="${fn:escapeXml(show_label)}">
                    <img alt="${fn:escapeXml(show_label)}" class="image" src="${show_image_url}" title="${fn:escapeXml(show_label)}" />
                  </a>
		     </c:if>
		     </table:action-column>
		   </c:otherwise>
         </c:choose>
     
         <!-- Go-update-view (of current row) column -->
         <c:if test="${update}">
           <c:choose>

                        <!-- AJAX cell render -->
			  <c:when test="${serverSide}">
			    <table:action-column id="${updateColumnId}" cssCellClass="utilbox" renderFunction="${updateColumnId}" cssStyle="${actionHeaderCssStyle}"/>
			  </c:when>

                        <!-- DOM cell render -->
			  <c:otherwise>
			    <table:action-column id="${updateColumnId}" cssCellClass="utilbox" cssStyle="${actionHeaderCssStyle}">
			    <c:if test="${not empty item }">
	              <c:set var="itemId"><spring:eval expression="item[typeIdFieldName]"/></c:set>
	              <spring:url value="${path}/${itemId}" var="update_form_url" />
	              <spring:url value="/resources/images/update.png" var="update_image_url" />
	              <spring:message arguments="${typeName}" code="entity_update" var="update_label" htmlEscape="false" />
	              <a href="#" onclick="javascript: window.location = '${update_form_url}${urlParams}&amp;' + datatablesRedirect" alt="${fn:escapeXml(update_label)}" title="${fn:escapeXml(update_label)}">
	                <img alt="${fn:escapeXml(update_label)}" class="image" src="${update_image_url}" title="${fn:escapeXml(update_label)}" />
	              </a>				  
			    </c:if>
			    </table:action-column>
			  </c:otherwise>
            </c:choose>
          </c:if>

                <!-- Add action column with row delete button -->
         <c:if test="${delete}">
           <c:choose>

                        <!-- AJAX cell render -->
			  <c:when test="${serverSide}">
			  	<c:if test="${not (selectionMultiRow and datatablesHasBatchSupport)}">
				    <table:action-column id="${removeColumnId}" cssCellClass="utilbox" renderFunction="${removeColumnId}" cssStyle="${actionHeaderCssStyle}"/>
				</c:if>
			  </c:when>

                        <!-- DOM cell render -->
			  <c:otherwise>
			    <table:action-column id="${removeColumnId}" cssCellClass="utilbox" cssStyle="${actionHeaderCssStyle}">
			    <c:if test="${not empty item }">
	              <c:set var="itemId"><spring:eval expression="item[typeIdFieldName]"/></c:set>
                  <spring:url value="${path}/${itemId}" var="delete_form_url" />
                  <spring:url value="/resources/images/delete.png" var="delete_image_url" />
                  <form:form action="#" onsubmit="javascript: this.action = '${delete_form_url}?' + datatablesRedirect" method="DELETE">
                    <spring:message arguments="${typeName}" code="entity_delete" var="delete_label" htmlEscape="false" />
                    <c:set var="delete_confirm_msg">
                      <spring:escapeBody javaScriptEscape="true">
                         <spring:message code="entity_delete_confirm" />
                      </spring:escapeBody>
                    </c:set>
                    <input alt="${fn:escapeXml(delete_label)}" class="image" src="${delete_image_url}" title="${fn:escapeXml(delete_label)}" type="image" value="${fn:escapeXml(delete_label)}" onclick="return confirm('${delete_confirm_msg}');" />
                  </form:form>			  
			    </c:if>
			    </table:action-column>
			  </c:otherwise>
            </c:choose>
          </c:if>
     
     <!-- configure some export formats -->
     <c:forTokens items="${export}" delims="," var="export_format">
     	<c:set var="export_format_lower" value="${fn:toLowerCase(export_format)}"/>
     	<datatables:export type="${export_format_lower}" includeHeader="true" 
     		fileName="${typeName}" cssClass="icon export_${export_format_lower}" label="${export_format_lower}"/>
     </c:forTokens>
     
                <!-- Set the function that initializes custom API functions -->
                <datatables:callback type="init" function="${initCustomFunctionsCallbackId}" />
     </c:otherwise>
     </c:choose>
    </gvnixddt:table>
  
    <script type="text/javascript">
	<c:forEach var="entry" items="${datatables_javaScript_elements_after}">
	${entry.value}
	</c:forEach>

    // Initialize custom API functions for this table
	    function ${initCustomFunctionsCallbackId}() {
	    	datatables_init_custom_api_functions('${id}', {
	    		'filterOnReturn': '${filterOnReturn}', 
	    		'filteringDelay' : '${filteringDelay}'
	    		<c:if test="${selection}">
	    		, 'selection': { 
	    			'multiRow': ${selectionMultiRow},
	    			'checkColumnClass': '${selectionCheckCssClass}',
	    			'infoMessage': '${selection_info_msg}',
	    			<c:if test="${not empty selectionSelectedCssClass}">
	    			'classForSelectedRow': '${selectionSelectedCssClass}',
	    			</c:if>
	    			<c:if test="${not empty selectionNotSelectedCssClass}">
	    			'classForNotSelectedRow': '${selectionNotSelectedCssClass}',
	    			</c:if>
	    			'debug': false}
	    		</c:if>
	    		});
	    	
	    	<c:if test="${selection_none_link}">
	    	$('#${id}_filter').before(${id}_selectionTools_str);
	    	</c:if>
	    	
			<c:forEach var="entry" items="${datatables_javaScript_elements_init}">
			${entry.value}
			</c:forEach>
	    }
  </script>
  </div>
</jsp:root>