/*
 * gvNIX is an open source tool for rapid application development (RAD).
 * Copyright (C) 2010 Generalitat Valenciana
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

package ${PACKAGE};

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.exception.ExceptionUtils;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.SimpleMappingExceptionResolver;

import ${PACKAGE_DIALOG}.Dialog;

/**
 * @author <a href="http://www.disid.com">DISID Corporation S.L.</a> made for <a
 *         href="http://www.dgti.gva.es">General Directorate for Information
 *         Technologies (DGTI)</a>
 */

public class MessageMappingExceptionResolver extends
    SimpleMappingExceptionResolver {

   private static final String DIALOGMESSAGE_ATTRIBUTE = "dialogMessage";

  /**
   * Actually resolve the given exception that got thrown during on handler
   * execution, redirecting to referrer URL and including an error code
   * parameter that represents a specific error.
   *
   * @param request current HTTP request
   * @param response current HTTP response
   * @param handler the executed handler, or <code>null</code> if none chosen at
   *          the time of the exception (for example, if multipart resolution
   *          failed)
   * @param ex the exception that got thrown during handler execution.
   *          Will extract the exception root cause, if it exists.
   * @return a corresponding ModelAndView to forward to, or <code>null</code>
   *         for default processing
   */
  @Override
  protected ModelAndView doResolveException(HttpServletRequest request,
                                            HttpServletResponse response,
                                            Object handler, Exception ex) {

    Exception theEx = ex;
    Throwable rootCauseException = ExceptionUtils.getRootCause(ex);
    if (rootCauseException != null) {
      theEx = (Exception) rootCauseException;
    }

    String referer = request.getHeader("Referer");

    if (referer == null || referer.isEmpty()) {
      return null;
    }

    // Use redirect to referrer as view name
    String viewName = "redirect:".concat(referer);

    // Apply HTTP status code for error views, if specified.
    // Only apply it if we're processing a top-level request.
    Integer statusCode = determineStatusCode(request, viewName);

    if (statusCode != null) {
      applyStatusCodeIfPossible(request, response, statusCode);
    }

    modalDialog(request, theEx);

    // We don't need to add anything to the ViewModel since we use
    // attribute session because we have redirect
    return new ModelAndView(viewName);
  }

  /**
   * Create an instance of {@link Dialog} and set it as a session attribute.<br/>
   * message-box.tagx will process the bean and will show the exception inside a modal window.
   * <p>
   * <strong>Note:</strong><br/>
   * Calculated page name is just get the Tiles view definition and prepend
   * <code>"/WEB-INF/views/"</code> and append <code>".jspx"</code>. This will
   * work with the current Spring Exceptions Mappings and its Tiles definitions.
   * Maybe a smarter implementation would be get the body attribute from the view
   * definitions in /WEB-INF/views/views.xml
   *
   * @param request
   * @param ex
   */
  private void modalDialog(HttpServletRequest request, Exception ex) {
    HttpSession session = request.getSession();
    // Determine the view name mapped with the passed exception
    String page = determineViewName(ex, request);
    if (page != null && !page.isEmpty()) {
      page = "/WEB-INF/views/".concat(page).concat(".jspx");
    }
    Dialog modalDialog = new Dialog(page, ex);
    session.setAttribute(DIALOGMESSAGE_ATTRIBUTE, modalDialog);
  }
}
