/*
 * gvNIX is an open source tool for rapid application development (RAD).
 * Copyright (C) 2010 Generalitat Valenciana
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

package __CONTROLLER_PACKAGE__;

import net.tanesha.recaptcha.ReCaptchaImpl;
import net.tanesha.recaptcha.ReCaptchaResponse;

import org.springframework.stereotype.Service;
import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

import __ENTITY_LEVEL_PACKAGE__.User;

/**
 * @author rohit
 *
 * @author <a href="http://www.disid.com">DISID Corporation S.L.</a> made for <a
 *         href="http://www.dgti.gva.es">General Directorate for Information
 *         Technologies (DGTI)</a>
 */

@Service("signupValidator")
public class SignUpValidator {

	/*
	 * (non-Javadoc)
	 *
	 * @see org.springframework.validation.Validator#supports(java.lang.Class)
	 */
	public boolean supports(Class<?> clazz) {
		return UserRegistrationForm.class.equals(clazz);
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see org.springframework.validation.Validator#validate(java.lang.Object,
	 * org.springframework.validation.Errors)
	 */
	public void validate(Object target, Errors errors) {
		UserRegistrationForm form = (UserRegistrationForm) target;

		String newPassword = form.getPassword();
		String newPasswordAgain = form.getRepeatPassword();
		if (!newPassword.equals(newPasswordAgain)) {
			errors.reject("changepassword.passwordsnomatch");
		}

       int usersSameEmail = User
                .findUsersByEmailAddress(form.getEmailAddress()).getResultList().size();
        if(usersSameEmail > 0){
            errors.reject("changepassword.duplicateemailaddress");
       }

		ReCaptchaImpl reCaptcha = new ReCaptchaImpl();
        reCaptcha.setPrivateKey("6LdfmL8SAAAAAHKPqUQV5SxrRX9Id6a8cQo-mgpE");

        String challenge = form.getRecaptcha_challenge_field();
        String uresponse = form.getRecaptcha_response_field();
        ReCaptchaResponse reCaptchaResponse = reCaptcha.checkAnswer("localhost", challenge, uresponse);
        if (!reCaptchaResponse.isValid()) {
        	errors.reject("recaptcha.mismatch");
        }


	}

}
