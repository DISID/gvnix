<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:spring="http://www.springframework.org/tags" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
  <!--
    Modal Dialog Box simulates a regular GUI dialog box.

    Usage:

    * Controller classes: Add error code request attribute
        uiModel.addAttribute("MESSAGE_ERROR", "_error_code_");

    * Exception handlers: Add error code parameter
        /asuntos?exception=_error_code_

    * Tags: Set error code attribute
        <util:message-box code="_error_code_" .../>

    The user can close the dialog box without acting by clicking on
    the X button in the top-right corner.
  -->
  <jsp:output omit-xml-declaration="yes" />

  <jsp:directive.attribute name="id" type="java.lang.String" required="false" rtexprvalue="true" description="Message box identifier. Useful to have several message boxes in one page (default 'MessageBoxDialog')" />
  <jsp:directive.attribute name="show" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if the message box should be opened (default 'true')" />
  <jsp:directive.attribute name="code" type="java.lang.String" required="false" rtexprvalue="true" description="The code (key) to use when looking up the message. Note code search order is: request attribute, then exception param and finally tag attribute." />

  <!-- Default values -->
  <c:if test="${empty id}">
    <c:set var="id" value="MessageBoxDialog" />
  </c:if>
  <c:if test="${empty show}">
    <c:set var="show" value="${true}" />
  </c:if>

  <!-- Default error message -->
  <spring:message code="error_uncaughtexception_problemdescription"
    var="default_message_error_desc" htmlEscape="false"/>

  <!-- Highest precedence: Search message code by message type as request attribute -->
  <c:choose>
    <c:when test="${not empty MESSAGE_INFO}">
      <c:set var="MsgDlgClass" value="MessageInfoBox" />
      <c:if test="${empty title}">
        <spring:message code="message_info_title" var="title" htmlEscape="false"/>
        <spring:message code="${MESSAGE_INFO}" var="description" htmlEscape="false"/>
      </c:if>
    </c:when>
    <c:when test="${not empty MESSAGE_ERROR}">
      <c:set var="MsgDlgClass" value="MessageErrorBox" />
      <c:if test="${empty title}">
        <spring:message code="message_error_title" var="title" htmlEscape="false"/>
        <spring:message code="${MESSAGE_ERROR}" var="description" htmlEscape="false"/>
      </c:if>
    </c:when>
     <c:when test="${not empty MESSAGE_ALERT}">
      <c:set var="MsgDlgClass" value="MessageAlertBox" />
      <c:if test="${empty title}">
        <spring:message code="message_alert_title" var="title" htmlEscape="false"/>
        <spring:message code="${MESSAGE_ALERT}" var="description" htmlEscape="false"/>
      </c:if>
    </c:when>
     <c:when test="${not empty MESSAGE_SUGGEST}">
      <c:set var="MsgDlgClass" value="MessageSuggestBox" />
      <c:if test="${empty title}">
        <spring:message code="message_suggest_title" var="title" htmlEscape="false"/>
        <spring:message code="${MESSAGE_SUGGEST}" var="description" htmlEscape="false"/>
      </c:if>
    </c:when>
    <c:otherwise>

      <!--
        Support to receive error codes in request parameters, useful to use
        with ReferrerHandlerExceptionResolver.
        Note explicit message has higher precedence, in that case error code
        won't be used.
      -->
      <c:choose>
        <c:when test="${not empty param.exception}">
          <c:set var="MsgDlgClass" value="MessageErrorBox" />
          <spring:message code="message_error_title" var="title" htmlEscape="false"/>
          <spring:message code="error_${fn:toLowerCase(param.exception)}_problemdescription" var="description"
            text="${default_message_error_desc}" htmlEscape="false"/>
        </c:when>

        <!-- Lower precedence: Use the message code given as tag attribute -->
        <c:when test="${not empty code}">
          <c:set var="MsgDlgClass" value="MessageAlertBox" />
          <spring:message code="message_alert_title" var="title" htmlEscape="false"/>
          <spring:message code="${code}" var="description"
            text="${default_message_error_desc}" htmlEscape="false"/>
        </c:when>
      </c:choose>

    </c:otherwise>
  </c:choose>

  <c:if test="${not empty MsgDlgClass}">
    <spring:message code="button_proceed" var="button_label"
      htmlEscape="false"/>
    <div dojoType="dijit.Dialog" id="${id}" style="display: none; position: absolute;">
      <div class="avisocorto">${title}</div>
      <div class="avisolargo">${description}</div>
      <div class="closeMessage">
      <button class="boton" dojoType="dijit.form.Button" type="button"
        onClick="dijit.byId('${id}').hide();">${button_label}</button>
      </div>
    </div>

    <spring:message code="application_name" var="dialogTitle" htmlEscape="false"/>

    <script type="text/javascript"><![CDATA[
        dojo.require("dijit.Dialog");

        var dlgContent = dojo.byId('${id}');
        var messageDlg;
        dojo.addOnLoad(function() {
          // create the dialog:
          messageDlg = new dijit.Dialog(
           { class: "MessageBoxDialog ${MsgDlgClass}",
             title: "${dialogTitle}",
             style: "width: 350px" }, dlgContent);

          if(${show}) {
            messageDlg.show();
          }
        });
    //]]></script>
  </c:if>
</jsp:root>
