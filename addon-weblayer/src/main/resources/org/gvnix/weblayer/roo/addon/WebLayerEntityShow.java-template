package __ENTITY_VIEW_PACKAGE__;


import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;

import org.gvnix.weblayer.roo.addon.annotation.GvNIXWebLayerShow;

/**
 * Web Layer definition for View Show on an entity. The layout of this form can 
 * be edited with the Vaadin Visual Editor.
 * 
 * Fields are automatically bound to container data sources and item properties
 * based on their names (propertyId + "Field") in the aspect. Implementing
 * methods with the same name as used in the aspect allows "overriding"
 * functionality as such methods replace those from the aspect.
 */
@GvNIXWebLayerShow
public class __ENTITY_SHOW_CLASS__ extends CustomComponent {

    @AutoGenerated
    private AbsoluteLayout mainLayout;
__FIELD_INSERT_POINT__

    public __ENTITY_SHOW_CLASS__() {
        buildMainLayout();
        setCompositionRoot(mainLayout);

        cusotmizeViewAndComponets();
        // TODO add user code here
    }

    @AutoGenerated
    private AbsoluteLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new AbsoluteLayout();

        // top-level component properties
        setWidth("100.0%");
        setHeight("100.0%");

__FIELD_CREATION_INSERT_POINT__

        return mainLayout;
    }

}
