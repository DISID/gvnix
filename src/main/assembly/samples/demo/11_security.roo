
// SLIDE 9: Seguridad

// Instalar la autorización y autenticación basada en base de datos

// 1. Autenticación
typicalsecurity setup

// Permitir el acceso en el menú a las categorías de seguridad solo para el rol ADMIN
menu entry roles --id c_user --roles ROLE_ADMIN
menu entry roles --id c_userrole --roles ROLE_ADMIN
menu entry roles --id c_cliente --roles ROLE_ADMIN
menu entry roles --id c_role --roles ROLE_ADMIN

// Hacer un Maven > Update Project Configuration
// Reiniciar el servidor para que recarge el menu.xml

// Acceder con el usuario admin/admin

backup

// 2. Autorización de URLs
// Editar src/main/resources/META-INF/spring/applicationContext-security.xml
// Definir <intercept-url access="hasRole('ROLE_ADMIN')" pattern="..."/>

// 3. Autorización métodos
// Editar src/main/resources/META-INF/spring/applicationContext-security.xml
// Activar control global de acceso a métodos añadiendo:
//   <global-method-security secured-annotations="enabled" mode="aspectj" />

// Editar pom.xml
// Añadir dependencia:
//        <dependency>
//            <groupId>org.springframework.security</groupId>
//            <artifactId>spring-security-aspects</artifactId>
//            <version>${spring-security.version}</version>
//        </dependency>
// Añadir al plugin "aspectj-maven-plugin" la configuración:
//        <aspectLibrary>
//            <groupId>org.springframework.security</groupId>
//            <artifactId>spring-security-aspects</artifactId>
//        </aspectLibrary>
// Ejemplo:
// Push-in de método setDireccionPostal de Cliente y definir es protegido:
//   @Secured("ROLE_TELLER")
//   public void setDireccionPostal(String direccionPostal) {
//       this.direccionPostal = direccionPostal;
//   }


