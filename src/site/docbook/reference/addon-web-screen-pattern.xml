<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="addon-web-screen-patterns" xml:lang="es"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1998/Math/MathML"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title xml:lang="es">Add-on Web Screen Patterns</title>

  <para xml:lang="es">Add-on para aplicar patrones de visualización sobre
  entidades y sus relaciones.</para>

  <para xml:lang="es">¿Qué entendemos por patrón de visualización? <link
  xlink:href="http://designingwebinterfaces.com/designing-web-interfaces-12-screen-patterns">"12
  patrones de pantalla estándar"</link></para>

  <section xml:id="addon-web-relation-styles_descripcion">
    <title xml:lang="es">Descripción</title>

    <para xml:lang="es">Este Add-on permite aplicar patrones de visualización
    sobre las entidad determinada del proyecto y una o varias de sus relaciones
    con otras entidades. Los patrones actualmente soportados son:</para>

    <itemizedlist>
      <listitem>
        <para>Maestro tabular</para>
      </listitem>

      <listitem>
        <para>Maestro tabular con edición registro</para>
      </listitem>

      <listitem>
        <para>Maestro registro</para>
      </listitem>

      <listitem>
        <para>Maestro registro - Detalle tabular</para>
      </listitem>
      
      <listitem>
        <para>Maestro registro - Detalle tabular con edición registro</para>
      </listitem>
      
      <listitem>
        <para>Maestro tabular - Detalle tabular</para>
      </listitem>
      
      <listitem>
        <para>Maestro tabular - Detalle tabular con edición registro</para>
      </listitem>

      <listitem>
        <para>Maestro tabular con edición registro - Detalle tabular</para>
      </listitem>
      
      <listitem>
        <para>Maestro tabular con edición registro - Detalle tabular con edición registro</para>
      </listitem>
    </itemizedlist>

    <para xml:lang="es">Cuando un patrón maestro tiene algún detalle,
    el detalle de una entidad se corresponde con las relaciones 1 a n
    <emphasis>ONE_TO_MANY</emphasis> o las relaciones n a n 
    <emphasis>MANY_TO_MANY</emphasis> que tiene con otras entidades.
    Así mismo, un maestro puede tener múltiples detalles y serán visualizados
    en la parte inferior de la pantalla mediante una pestaña por cada
    una de las relaciones.</para>
  </section>

  <section xml:id="addon-web-relation-styles_instalacion">
    <title xml:lang="es">Funcionalidad</title>

    <para xml:lang="es">El add-on proporciona una serie de anotaciones que
    sirven para definir patrones de visualización sobre el controlador de una
    entidad de la aplicación. Por comodidad se han definido una serie de <link
    linkend="apendice-comandos_web-relation-styles">comandos</link> para
    facilitar la aplicación de estas anotaciones en las clases Java
    necesarias.</para>

    <para xml:lang="es">Se definirá un patrón de visualización sobre
    el controlador de una entidad (tabular, tabular con edición registro
    o registro) entendiéndose como el maestro en el patrón de visualización.
    Se definirá sobre las relaciones de la entidad del controlador sus propios 
    patrones de visualización (tabular, tabular con edición registro o registro)
    entendiéndose como el detalle del patrón.</para>

    <para xml:lang="es">Suponiendo el siguiente escenario codificado en Java
    :</para>

    <programlisting>@RooJpaActiveRecord
public class Entidad1 {
  @OneToMany
  Set&lt;Entidad2&gt; campo2;
  @OneToMany
  Set&lt;Entidad3&gt; campo3;
  ...
}

@RooJpaActiveRecord
public class Entidad2 {
  ...
}</programlisting>

    <para xml:lang="es">El código anterior declara una
    <emphasis>Entidad1</emphasis> que tiene un <emphasis>campo2</emphasis> que
    define a su vez una relación 1 a n con la <emphasis>Entidad2</emphasis>,
    lo mismo con la relación definida en el <emphasis>campo3</emphasis>. La
    <emphasis>Entidad1</emphasis> está expuesta mediante el
    <emphasis>Controlador1</emphasis>, a su vez la
    <emphasis>Entidad2</emphasis> lo está mediante el
    <emphasis>Controlador2</emphasis>.</para>

    <programlisting>@RooWebScaffold(..., formBakingObject=Entidad1.class)
@Controller
public class Controlador1 {
  ...
}

@RooWebScaffold(..., formBackingObject=Entidad2.class)
@Controller
public class Controlador2 {
  ...
}
</programlisting>

    <para xml:lang="es">Así pues, mediante el commando <emphasis>web mvc
    pattern</emphasis> es posible definir un patrón de visualización maestro
    sobre el controlador de cualquier entidad. Al usar el comando,
    además de añadir la anotación <emphasis>@GvNIXPattern</emphasis> al
    controlador elegido, se instalarán / crearán / modificarán los componentes
    Spring MVC necesarios (diferentes archivos tagx, jspx, imágenes, javascript,
    ...) y se generarán los aspectos Java apropiados para lograr
    visualizar el patrón elegido.</para>

    <para xml:lang="es">A continuación, el comando <emphasis>web mvc relation
    pattern</emphasis> permite definir el formato de visualización del detalle
    de una entidad dado su controlador, esto es, como se visualizarán las entidades
    relacionadas al visualizar la entidad maestra. Notar que el comando se
    aplica sobre un campo, una relación, determinada de la entidad maestra (en
    el ejemplo propuesto, se aplicaría el comando una vez sobre
    <emphasis>campo2</emphasis> y opcionalmente otra vez sobre
    <emphasis>campo3</emphasis>). Este comando también instala / crea /
    modifica componentes Spring MVC, añade la anotación
    <emphasis>@GvNIXRelationsPattern</emphasis> en el controlador de la
    entidad maestra y añade la anotación
    <emphasis>@GvNIXRelatedPattern</emphasis> sobre el controlador de la
    entidad detalle. Estas anotaciones harán que se genere, en caso
    necesario, los aspectos Java que hacen posible la visualización
    del patrón seleccionado.</para>
  </section>

  <section>
    <title>Patrón Tabular y Registro</title>

    <section>
      <title>Tabular</title>

      <para>El patrón tabular define una visualización de varios registros
      simultaneos con la posibilidad de desplazarse a lo largo de todos los
      registros existentes mediante paginación.</para>

      <para>Las operaciones de creación, actualización y borrado en este
      formato de visualización se pueden realizar sobre varios registros
      de forma simultánea. Estas operaciones se realizarán de forma transaccional,
      con lo que el fallo de una operación sobre un registro provocaría que todo
      el proceso fallase y todos los registros involucrados en la operación
      permanecerían inalterados.</para>

      <para>El Add-on Web Screen Pattern, genera los componentes necesarios para
      mostrar una entidad en formato tabular. Por defecto, la jspx
      asociada a este patrón utiliza el componente
      <emphasis>&lt;form:update/&gt;</emphasis> de la librería de tags
      <emphasis>/pattern/form</emphasis>.</para>

      <para>Este formato de visualización por defecto muestra y habilita el campo
      que representa el identificador de la entidad en el formulario de creación
      y actualización. En ocasiones esto puede ser útil en entidades en las que
      el identificador haya de ser establecida a mano por el usuario. Otras veces,
      en cambio, se desea que el identificador sea generado automáticamente.
      El tagx <emphasis>&lt;form:update/&gt;</emphasis> dispone de un
      atributo <emphasis role="bold">idDisabled</emphasis> que establecido con el valor
      <emphasis>true</emphasis>, deshabilita el campo en los formularios de
      forma que el usuario no puede establecer ningún valor en este campo para
      evitar confusiones, pues será el proveedor de persistencia el que se
      ocupe de establecer el valor de este campo usando la generación automática de
      identificadores. También se espera que el campo identificador de la
      entidad sea el campo con nombre <emphasis>id</emphasis>, si por algún motivo
      no fuese el caso, se puede indicar el campo que hace las veces de identificador
      mediante el atributo <emphasis role="bold">idField</emphasis>.</para>

      <para>Otro atributo con el que cuenta el tagx de update es el
      atributo <emphasis role="bold">finder</emphasis> cuyo valor indica un
      buscador al que se podrá acceder mediante la <emphasis>pestaña lupa</emphasis>
      que se muestra a la derecha de la caja principal de la vista del patrón
      tabular.</para>
    </section>

    <section>
      <title>Registro</title>

      <para>Este patrón realiza la visualización de un único registro pero con la
      posibilidad de avanzar, mediante paginación de uno en uno, entre todos
      los registros existentes.</para>

      <para>La generación automática de código de este patrón posiciona los
      campos de la entidad unos debajo de otros. A parte de generar la
      jspx propia del patrón, también modifica las jspx <emphasis>create,
      update y show</emphasis> de la entidad. En todas estas jspx los campos
      de la entidad se incrustan dentro de elementos HTML de tipo lista
      <emphasis>&lt;ul&gt;&lt;li&gt;campo_entidad&lt;/li&gt;&lt;/ul&gt;</emphasis>.
      Con esto se permite personalizar la posición de cada uno de los campos de la
      entidad en estas jspx moviendo los elementos
      <emphasis>&lt;li&gt;campo_entidad&lt;/li&gt;</emphasis> dentro de otros elementos
      <emphasis>&lt;ul/&gt;</emphasis> de forma que los campos se mostrarán en
      columnas. El CSS de la aplicación está preparado para ello.</para>
      
      <para>Por ejemplo, para el siguiente código extraído de
      <emphasis>show.jspx</emphasis>:</para>

      <programlisting>&lt;ul class="formInline" id="ul_com_springsource_petclinic_domain_Pet_name"&gt;
  &lt;li class="size120" id="li_com_springsource_petclinic_domain_Pet_name"&gt;
    &lt;field:input field="name" id="c_com_springsource_petclinic_domain_Pet_name"
    		min="1" required="true" z="ZY+k75JeSo9RmejYZRFNIvs2aBg="/&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="formInline" id="ul_com_springsource_petclinic_domain_Pet_weight"&gt;
  &lt;li class="size120" id="li_com_springsource_petclinic_domain_Pet_weight"&gt;
    &lt;field:input field="weight" id="c_com_springsource_petclinic_domain_Pet_weight"
    		min="0" required="true" validationMessageCode="field_invalid_number"
    		z="cOD5zE/z7gy+RZu5kVSPuxCa+/I="/&gt;
  &lt;/li&gt;
&lt;/ul&gt;</programlisting>

      <para>donde los campos <emphasis>name</emphasis> y <emphasis>weight</emphasis>
      se visualizan uno debajo de otro, se puede modificar por:</para>

      <programlisting>&lt;ul class="formInline" id="ul_com_springsource_petclinic_domain_Pet_name"&gt;
  &lt;li class="size120" id="li_com_springsource_petclinic_domain_Pet_name"&gt;
    &lt;field:input field="name" id="c_com_springsource_petclinic_domain_Pet_name"
    		min="1" required="true" z="ZY+k75JeSo9RmejYZRFNIvs2aBg="/&gt;
  &lt;/li&gt;
  &lt;li class="size120" id="li_com_springsource_petclinic_domain_Pet_weight"&gt;
    &lt;field:input field="weight" id="c_com_springsource_petclinic_domain_Pet_weight"
    		min="0" required="true" validationMessageCode="field_invalid_number"
    		z="cOD5zE/z7gy+RZu5kVSPuxCa+/I="/&gt;
  &lt;/li&gt;
&lt;/ul&gt;</programlisting>

      <para>donde los campos <emphasis>name</emphasis> y <emphasis>weight</emphasis>
      se visualizan uno junto al otro en la misma fila.</para>

      <para>La jspx propia del patrón registro usa el componente
      <emphasis>show.tagx</emphasis> de la librería de tags<emphasis>
      pattern</emphasis>.</para>

      <programlisting>&lt;page:show id="ps_com_springsource_petclinic_domain_Pet" object="${pet}" path="/pets"
      		z="FrMAP8iVoUnyo/I+XWaK7GumSjc="&gt;</programlisting>

      <para>Este componente acepta algunos atributos interesantes:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis>list = true|false</emphasis> indica si se desea
          mostrar un icono que da acceso mediante un enlace a la vista list
          de la Entidad.</para>
        </listitem>

        <listitem>
          <para><emphasis>create = true|false</emphasis> indica si se desea
          mostrar el icono que da acceso al formulario de creación de un nuevo
          registro.</para>
        </listitem>

        <listitem>
          <para><emphasis>update = true|false</emphasis> indica si se desea
          mostrar el icono que enlaza con el formulario de edición del
          registro visualizado.</para>
        </listitem>

        <listitem>
          <para><emphasis>delete = true|false</emphasis> indica si se desea
          habilitar el borrado de registros desde esta vista.</para>
        </listitem>

        <listitem>
          <para><emphasis>finder = NombreBuscador</emphasis> (ejemplo
          <emphasis>finder="ByOwner"</emphasis>) si está establecido, en la
          vista del patrón registro se mostrará un enlace que llevará al
          buscador indicado por el valor del atributo. Este enlace se representa
          mediante una <emphasis>pestaña con una lupa</emphasis>, a la derecha de la caja principal
          de la vista del patrón.</para>
        </listitem>
      </itemizedlist>
    </section>

  </section>
</chapter>
