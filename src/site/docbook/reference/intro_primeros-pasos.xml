<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="primeros-pasos"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1998/Math/MathML"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook" 
         xml:lang="es">
  <title xml:lang="es">Primeros pasos con gvNIX</title>

  <section xml:id="primeros-pasos_primer-paso">
    <title xml:lang="es">Tu aplicación web en menos de 10 minutos</title>

    <para xml:lang="es">Después de instalar gvNIX, vamos a probar a crear una
    aplicación sencilla en unos minutos.</para>

    <para xml:lang="es">La siguiente aplicación es simplemente para mostrar
    las posibilidades del entorno, por lo que no se da una explicación
    exhaustiva de todos los pasos.</para>

    <para xml:lang="es">Ejecutar los comandos del siguiente ejemplo. Notar que
    los comandos (bash o roo) se han resaltado en negrita para facilitar su
    localización:</para>

    <programlisting>bash$ <emphasis role="bold">mkdir tenminutes</emphasis>
bash$ <emphasis role="bold">cd tenminutes</emphasis>
bash$ <emphasis role="bold">gvnix</emphasis>
    ____  ____  ____  
   / __ \/ __ \/ __ \ 
  / /_/ / / / / / / / 
 / _, _/ /_/ / /_/ /  
/_/ |_|\____/\____/    1.1.0.M1 [rev 3a0b8a3]


Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
roo&gt; <emphasis role="bold">hint</emphasis>
Welcome to Roo! We hope you enjoy your stay!

Before you can use many features of Roo, you need to start a new project.

To do this, type 'project' (without the quotes) and then hit TAB.

Enter a --topLevelPackage like 'com.mycompany.projectname' (no quotes).
When you've finished completing your --topLevelPackage, press ENTER.
Your new project will then be created in the current working directory.

Note that Roo frequently allows the use of TAB, so press TAB regularly.
Once your project is created, type 'hint' and ENTER for the next suggestion.
You're also welcome to visit http://forum.springframework.org for Roo help.</programlisting>

    <para xml:lang="es">Como se observa, el comando <command>hint</command> es
    capaz de guiarle en los pasos que debe seguir. Vamos a seguirlos:</para>

    <programlisting>roo&gt; <emphasis role="bold">project --topLevelPackage com.tenminutes</emphasis>
Created .../tenminutes/pom.xml
Created SRC_MAIN_JAVA
Created SRC_MAIN_RESOURCES
Created SRC_TEST_JAVA
Created SRC_TEST_RESOURCES
Created SRC_MAIN_WEBAPP
Created SRC_MAIN_RESOURCES/META-INF/spring
Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml
Created SRC_MAIN_RESOURCES/log4j.properties
com.tenminutes roo&gt; <emphasis role="bold">hint</emphasis>
Roo requires the installation of a JPA provider and associated database.

Type 'persistence setup' and then hit TAB three times.
We suggest you type 'H' then TAB to complete "HIBERNATE".
After the --provider, press TAB twice for database choices.
For testing purposes, type (or TAB) HYPERSONIC_IN_MEMORY.
If you press TAB again, you'll see there are no more options.
As such, you're ready to press ENTER to execute the command.

Once JPA is installed, type 'hint' and ENTER for the next suggestion.</programlisting>

    <para xml:lang="es">En este punto ya tiene un proyecto Maven de aplicación
    web preparado. Si usa Java 5 tendrá que añadir las referencias a las
    librerías JAXB con con los siguientes comandos:</para>

    <programlisting>com.tenminutes roo&gt; <emphasis role="bold">dependency add --groupId javax.xml.bind --artifactId jaxb-api --version 2.1</emphasis>
javax.xml.bind roo&gt; <emphasis role="bold">dependency add --groupId com.sun.xml.bind --artifactId jaxb-impl --version 2.1.3</emphasis></programlisting>

    <para>Ahora añadiremos el soporte para el manejo de la persistencia de
    datos a traves de JPA. El siguiente ejemplo muestra los comandos que debe
    usar para configurar el soporte JPA. Recuerde que puede usar TAB como
    ayuda a la escritura en los comandos:</para>

    <programlisting>com.sun.xml.bind roo&gt; <emphasis role="bold">persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY</emphasis>
Created ...
com.sun.xml.bind roo&gt; <emphasis role="bold">entity --class ~.Timer --testAutomatically</emphasis>
Created ...
~.Timer roo&gt; <emphasis role="bold">field string --fieldName message --notNull</emphasis>
Managed ...
~.Timer roo&gt; <emphasis role="bold">controller all --package ~.web</emphasis>
Created ...
~.web roo&gt; <emphasis role="bold">selenium test --controller ~.web.TimerController</emphasis>
Created ...
~.web roo&gt; <emphasis role="bold">theme install --name theme-cit</emphasis>
~.web roo&gt; <emphasis role="bold">theme set --name theme-cit</emphasis>
~.web roo&gt; <emphasis role="bold">perform tests</emphasis>
...
[INFO] BUILD SUCCESSFUL
~.web roo&gt; <emphasis role="bold">perform package</emphasis>
...
[INFO] BUILD SUCCESSFUL
~.web roo&gt; <emphasis role="bold">perform eclipse</emphasis>
...
[INFO] BUILD SUCCESSFUL
~.web roo&gt; <emphasis role="bold">quit</emphasis>
bash$ <emphasis role="bold">mvn tomcat:run</emphasis></programlisting>

    <para xml:lang="es">El comando <command>perform</command> es una forma
    secilla de ejecutar los comandos de Maven más usuales con el beneficio del
    autocompletado del intérprete de comandos. El comando <emphasis>perform
    eclipse</emphasis> crea los archivos que necesita Eclipse para importarlo
    y a partir de ese momento poder desarrollar desde el propio Eclipse, por
    ejemplo con el STS instalado.</para>

    <para xml:lang="es">Con el comando <emphasis role="bold">mvn
    tomcat:run</emphasis> arrancamos un Tomcat con la aplicación web, en este
    momento podemos navegar por la aplicación y ejecutar tests funcionales con
    Selenium:</para>

    <orderedlist>
      <listitem>
        <para>Abrir una nueva ventana de intérprete de comandos del
        sistema</para>
      </listitem>

      <listitem>
        <para>Cambiar al directorio del proyecto</para>
      </listitem>

      <listitem>
        <para>Ejecutar el comando <command>mvn
        selenium:selenese</command></para>
      </listitem>

      <listitem>
        <para>Ahora debaría ver su FireFox ejecutando los test de Selenium
        generados</para>
      </listitem>
    </orderedlist>

    <para xml:lang="es">Para probar la nueva aplicación web acceda a <link
    xlink:href="http://localhost:8080/tenminutes">http://localhost:8080/tenminutes</link>.
    Debería ver algo como esto:</para>

    <figure>
      <title xml:lang="es">Pantalla inicial de la aplicación</title>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/tenminutes.png" scale="65"></imagedata>
        </imageobject>
      </mediaobject>
    </figure>
  </section>

  <section xml:id="primeros-pasos_ejemplos">
    <title xml:lang="es">Ejemplos</title>

    <para xml:lang="es">En el fichero zip se incluye un directorio
    <filename>samples</filename> donde se puede encontrar scripts que generan
    proyectos de aplicaciones de ejemplo.</para>

    <para xml:lang="es">Para ejecutarlo puede realizarlo de la siguiente
    forma:</para>

    <programlisting>bash$ <emphasis role="bold">mkdir sample</emphasis>
bash$ <emphasis role="bold">cd sample</emphasis>
bash:sample$ <emphasis role="bold">gvnix</emphasis>
roo&gt; <emphasis role="bold">script --file SCRIPT.roo</emphasis>
project ...
...
Milliseconds required:
~.web roo&gt; <emphasis role="bold">quit</emphasis>
$ <emphasis role="bold">mvn tomcat:run</emphasis></programlisting>

    <para>Donde <filename>SCRIPT.roo</filename> es el nombre del fichero de
    ejemplo que desea ejecutar:</para>

    <variablelist>
      <varlistentry>
        <term><filename>clinic.roo</filename></term>

        <listitem>
          <para>Ejemplo de una aplicación de Clinica Veterinaria.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>expenses.roo</filename></term>

        <listitem>
          <para>Ejemplo usando GWT como librería de visualización.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>wedding.roo</filename></term>

        <listitem>
          <para>Ejemplo de aplicación con uso de correo electrónico.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>gvnix-sample.roo</filename></term>

        <listitem>
          <para>Ejemplo de aplicación que hace uso de los add-ons de
          gvNIX.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>La mayoría de esto ejemplos utilizan bases de datos en memoria por
    lo que no necesitan configuración adicional. Ejecutar el comando <emphasis
    role="bold">mvn tomcat:run</emphasis> para acceder a la aplicación web
    ejemplo.</para>
  </section>
</chapter>
