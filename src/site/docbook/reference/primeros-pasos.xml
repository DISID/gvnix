<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="primeros-pasos"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1998/Math/MathML"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title xml:lang="es">Primeros paso con gvNIX</title>

  <section xml:id="primeros-pasos_primer-paso">
    <title xml:lang="es">Primer paso: Su propia aplicación en menos de 10
    minutos</title>

    <para xml:lang="es">Ahora vamos a probar a crear una aplicación sencilla
    en unos minutos.</para>

    <para xml:lang="es">La siguiente aplicación es simplemente para mostrale
    las posibilidades de la herramienta. No vamos a dar una explicación de
    todos los pasos.</para>

    <para xml:lang="es">Empieze con los siguiente comandos:</para>

    <programlisting>$ <emphasis role="bold">mkdir ten-minutes</emphasis>
$ <emphasis role="bold">cd ten-minutes</emphasis>
$ <emphasis role="bold">roo</emphasis>
    ____  ____  ____  
   / __ \/ __ \/ __ \ 
  / /_/ / / / / / / / 
 / _, _/ /_/ / /_/ /  
/_/ |_|\____/\____/    W.X.Y.ZZ [rev RRR]


Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
roo&gt; <emphasis role="bold">hint</emphasis>
Welcome to Roo! We hope you enjoy your stay!

Before you can use many features of Roo, you need to start a new project.

To do this, type 'project' (without the quotes) and then hit TAB.

Enter a --topLevelPackage like 'com.mycompany.projectname' (no quotes).
When you've finished completing your --topLevelPackage, press ENTER.
Your new project will then be created in the current working directory.

Note that Roo frequently allows the use of TAB, so press TAB regularly.
Once your project is created, type 'hint' and ENTER for the next suggestion.
You're also welcome to visit http://forum.springframework.org for Roo help.</programlisting>

    <para xml:lang="es">Como puede observar, el comando
    <command>hint</command> es capaz de guiarle en los pasos que debe seguir.
    Vamos a seguirlos:</para>

    <programlisting>roo&gt; <emphasis role="bold">project --topLevelPackage com.tenminutes</emphasis>
Created /home/balex/ten-minutes/pom.xml
Created SRC_MAIN_JAVA
Created SRC_MAIN_RESOURCES
Created SRC_TEST_JAVA
Created SRC_TEST_RESOURCES
Created SRC_MAIN_WEBAPP
Created SRC_MAIN_RESOURCES/META-INF/spring
Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml
roo&gt; <emphasis role="bold">hint</emphasis>
Roo requires the installation of a JPA provider and associated database.

Type 'persistence setup' and then hit TAB three times.
We suggest you type 'H' then TAB to complete "HIBERNATE".
After the --provider, press TAB twice for database choices.
For testing purposes, type (or TAB) HYPERSONIC_IN_MEMORY.
If you press TAB again, you'll see there are no more options.
As such, you're ready to press ENTER to execute the command.

Once JPA is installed, type 'hint' and ENTER for the next suggestion.</programlisting>

    <para xml:lang="es">En este punto ya tiene una aplicación base de maven
    preparada. Si está usando Java 5 tendrá que añadir las referencias a las
    librerías JAXB con con los siguientes comandos:</para>

    <programlisting>roo&gt; <emphasis role="bold">dependency add --groupId javax.xml.bind --artifactId jaxb-api --version 2.1</emphasis>
roo&gt; <emphasis role="bold">dependency add --groupId com.sun.xml.bind --artifactId jaxb-impl --version 2.1.3</emphasis></programlisting>

    <para>Ahora le añadiremos el soporte para el manejo de datos a traves de
    JPA. Aquí tiene los comandos que debería usar para ello. Recuerde que
    puede usar TAB como ayuda a la escritura en los comandos:</para>

    <programlisting>roo&gt; <emphasis role="bold">persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY</emphasis>
roo&gt; <emphasis role="bold">hint</emphasis>
roo&gt; <emphasis role="bold">entity --class ~.Timer --testAutomatically</emphasis>
roo&gt; <emphasis role="bold">hint</emphasis>
roo&gt; <emphasis role="bold">field string --fieldName message --notNull</emphasis>
roo&gt; <emphasis role="bold">hint controllers</emphasis>
roo&gt; <emphasis role="bold">controller all --package ~.web</emphasis>
roo&gt; <emphasis role="bold">selenium test --controller ~.web.TimerController</emphasis>
roo&gt; <emphasis role="bold">theme install --name theme-cit</emphasis>
roo&gt; <emphasis role="bold">theme set --name theme-cit</emphasis>
roo&gt; <emphasis role="bold">perform tests</emphasis>
roo&gt; <emphasis role="bold">perform package</emphasis>
roo&gt; <emphasis role="bold">perform eclipse</emphasis>
roo&gt; <emphasis role="bold">quit</emphasis>
$ <emphasis role="bold">mvn tomcat:run</emphasis></programlisting>

    <para xml:lang="es">El comando <command>perform</command> es una forma
    secilla de ejecutar los comando de maven mas usuales con el beneficio de
    el autocompletado del interprete de comandos. El comando perform eclipse
    deja preparado el proyecto para importarlo en un eclise con el STS
    instalado.</para>

    <para xml:lang="es">Ahora que hay un Tomcat arrancado con la aplicación,
    vamos a ejecutar los test de Selenium. Para ello abra una nueva ventana de
    interprete de comandos del sistema, entre en el directorio
    <filename>ten-minutes</filename> que acabamos de crear y ejecute el
    comando <command>mvn selenium:selenese</command>. Ahora debaría ver su
    FireFox ejecutando los test de Selenium generados. Para usar su nueva
    aplicación web acceda a <link
    xlink:href="http://localhost:8080/tenminutes">http://localhost:8080/tenminutes</link>.
    Debería ver algo como esto:</para>

    <figure>
      <title xml:lang="es">Pantalla inicial de la aplicación</title>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/tenminutes.png" scale="65"></imagedata>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Esto es sólo una muestra de la potencia de la herramienta. Puede ver
    mas información en la documentación de Spring Roo adjunta y en la sección
    <link linkend="resumen-addons">Descripción de los Add-ons de
    gvNIX</link></para>
  </section>

  <section xml:id="primeros-pasos_ejemplos">
    <title xml:lang="es">Ejemplos</title>

    <para xml:lang="es">En el fichero zip se incluye un directorio
    <filename>samples</filename> donde se puede encontrar scripts para generar
    aplicaciones de ejemplo.</para>

    <para xml:lang="es">Para ejecutarlo puede realizarlo de la siguiente
    forma:</para>

    <programlisting>$ <emphasis role="bold">mkdir sample</emphasis>
$ <emphasis role="bold">cd sample</emphasis>
$ <emphasis role="bold">roo</emphasis>
roo&gt; <emphasis role="bold">script --file filename.roo</emphasis>
roo&gt; <emphasis role="bold">quit</emphasis>
$ <emphasis role="bold">mvn tomcat:run</emphasis></programlisting>

    <para>Sustituya <filename>filename.roo</filename> por el nombre del
    fichero de ejemplo que desea ejecutar. Despues de estas instrucciones ya
    tendrá disponible la aplicación en el puerto 8080 de su máquina.</para>

    <para>Los ejemplos que puede encontrar:</para>

    <variablelist>
      <varlistentry>
        <term><filename>clinic.roo</filename></term>

        <listitem>
          <para>Ejemplo de una aplicación de Clinica Veterinaria.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>expenses.roo</filename></term>

        <listitem>
          <para>Ejemplo usando GWT como librería de visualización.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>wedding.roo</filename></term>

        <listitem>
          <para>Ejemplo de aplicación con uso de correo electrónico.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>gvnix-sample.roo</filename></term>

        <listitem>
          <para>Ejemplo de aplicación que hace uso de los add-ons de
          gvNIX.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>La mayoría de esto ejemplos utilizan bases de datos en memoria por
    lo que no necesitan configuración. alguna.</para>
  </section>
</chapter>
