<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <licenses>
    <license>
      <name>&gt;GNU General Public License (GPL), Version 3.0</name>
      <url>http://www.gnu.org/copyleft/gpl.html</url>
      <distribution>repo</distribution>
      <comments>
      <![CDATA[
      gvNIX. Spring Roo based RAD tool for Conselleria d'Infraestructures
      i Transport - Generalitat Valenciana
      Copyright (C) 2010, 2011 CIT - Generalitat Valenciana

      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.

      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.

      You should have received a copy of the GNU General Public License
      along with this program. If not, see <http://www.gnu.org/licenses />.
      ]]>
      </comments>
    </license>
  </licenses>

  <parent>
    <groupId>org.gvnix</groupId>
    <artifactId>wrapping.hibernate</artifactId>
    <version>0.8.0-SNAPSHOT</version>
  </parent>

  <!-- Ver sistema de nominaciÃ³n en ../README.rst -->
  <groupId>${pkgGroupId}</groupId>
  <artifactId>${project.parent.groupId}.${pkgGroupId}.validator</artifactId>
  <version>${pkgVersion}</version>
  <packaging>bundle</packaging>
  <name>gvNIX - OSGi - Hibernate Validator</name>
  <description>Hibernate Validator Bundle. This OSGi bundle wraps Hibernate Validator ${pkgVersion} jar files.</description>

  <organization>
    <name>Conselleria d'Infraestructures, Territori i Medi Ambient - Generalitat Valenciana</name>
  </organization>

  <properties>
    <pkgGroupId>org.hibernate</pkgGroupId>
    <pkgArtifactId>hibernate-validator</pkgArtifactId>
    <pkgVersion>4.2.0.Final</pkgVersion>
    <!-- <pkgValidationAPIVersion>1.0</pkgValidationAPIVersion> -->
    <pkgVendor>JBoss</pkgVendor>
    <pkgDocUrl>http://www.hibernate.org/docs</pkgDocUrl>
    <pkgLicense>http://www.hibernate.org/license</pkgLicense>
    <pkgExport>org.hibernate.validator.*;version=${pkgVersion}</pkgExport>
    <!-- <pkgExport>org.hibernate.validator.*;version=${pkgVersion},javax.validation.*;version=${pkgValidationAPIVersion}</pkgExport> -->
    <pkgImport>*</pkgImport>
    <pkgPrivate>com.googlecode.jtype,!*</pkgPrivate>
    <pkgInclude>src/main/resources/</pkgInclude>
  </properties>

  <dependencies>
    <dependency>
       <groupId>${pkgGroupId}</groupId>
       <artifactId>${pkgArtifactId}</artifactId>
       <version>${pkgVersion}</version>
    </dependency>
    <!-- JType will be included in Hibernate Validator bundle -->
    <dependency>
      <groupId>com.googlecode.jtype</groupId>
      <artifactId>jtype</artifactId>
      <version>0.1.2</version>
    </dependency>
    <!-- 
    In the OSGi world the validation api, will delegate that call to the calling bundle (in our case the database tier bundle) so we are going to make sure that it finds it. How we are going to do so? We are going to copy it from Hibernate Validator and add it in our bundle.
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
    </dependency>
    -->
  </dependencies>

<!--
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4.3</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
  </build>
-->
</project>
